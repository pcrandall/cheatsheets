{"id":"../node_modules/isotope-layout/js/layout-modes/fit-rows.js","dependencies":[{"name":"/app/package.json","includedInParent":true,"mtime":1598803809693},{"name":"/app/.babelrc","includedInParent":true,"mtime":1598803808957},{"name":"/app/node_modules/isotope-layout/package.json","includedInParent":true,"mtime":1598805133070},{"name":"../layout-mode","loc":{"line":17,"column":14},"parent":"/app/node_modules/isotope-layout/js/layout-modes/fit-rows.js","resolved":"/app/node_modules/isotope-layout/js/layout-mode.js"}],"generated":{"js":"var define;\n/**\n * fitRows layout mode\n */\n\n( function( window, factory ) {\n  // universal module definition\n  /* jshint strict: false */ /*globals define, module, require */\n  if ( typeof define == 'function' && define.amd ) {\n    // AMD\n    define( [\n        '../layout-mode'\n      ],\n      factory );\n  } else if ( typeof exports == 'object' ) {\n    // CommonJS\n    module.exports = factory(\n      require('../layout-mode')\n    );\n  } else {\n    // browser global\n    factory(\n      window.Isotope.LayoutMode\n    );\n  }\n\n}( window, function factory( LayoutMode ) {\n'use strict';\n\nvar FitRows = LayoutMode.create('fitRows');\n\nvar proto = FitRows.prototype;\n\nproto._resetLayout = function() {\n  this.x = 0;\n  this.y = 0;\n  this.maxY = 0;\n  this._getMeasurement( 'gutter', 'outerWidth' );\n};\n\nproto._getItemLayoutPosition = function( item ) {\n  item.getSize();\n\n  var itemWidth = item.size.outerWidth + this.gutter;\n  // if this element cannot fit in the current row\n  var containerWidth = this.isotope.size.innerWidth + this.gutter;\n  if ( this.x !== 0 && itemWidth + this.x > containerWidth ) {\n    this.x = 0;\n    this.y = this.maxY;\n  }\n\n  var position = {\n    x: this.x,\n    y: this.y\n  };\n\n  this.maxY = Math.max( this.maxY, this.y + item.size.outerHeight );\n  this.x += itemWidth;\n\n  return position;\n};\n\nproto._getContainerSize = function() {\n  return { height: this.maxY };\n};\n\nreturn FitRows;\n\n}));\n"},"sourceMaps":null,"error":null,"hash":"d4f536aaaae35fb68ce8ebe6d83a0e39","cacheData":{"env":{}}}