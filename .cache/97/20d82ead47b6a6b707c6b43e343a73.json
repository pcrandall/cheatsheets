{"id":"behaviors/anchors.js","dependencies":[{"name":"/app/.babelrc","includedInParent":true,"mtime":1598803808957},{"name":"/app/package.json","includedInParent":true,"mtime":1598803809693},{"name":"onmount","loc":{"line":1,"column":20},"parent":"/app/_parcel/behaviors/anchors.js","resolved":"/app/node_modules/onmount/index.js"},{"name":"dom101/prepend","loc":{"line":2,"column":20},"parent":"/app/_parcel/behaviors/anchors.js","resolved":"/app/node_modules/dom101/prepend.js"}],"generated":{"js":"\"use strict\";\n\nvar _onmount = _interopRequireDefault(require(\"onmount\"));\n\nvar _prepend = _interopRequireDefault(require(\"dom101/prepend\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nvar DEFAULTS = {\n  // select elements to put anchor on\n  rule: 'h2[id]',\n  // class name for anchor\n  className: 'local-anchor anchor',\n  // text of anchor\n  text: '#',\n  // append before or after innerText?\n  shouldAppend: false\n};\n/*\n * Behavior: Add local anchors\n */\n\n(0, _onmount.default)('[data-js-anchors]', function () {\n  var data = JSON.parse(this.getAttribute('data-js-anchors') || '{}');\n  var rules = Array.isArray(data) ? data.length ? data : [DEFAULTS] : [Object.assign({}, DEFAULTS, data)];\n\n  var _iterator = _createForOfIteratorHelper(rules),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var _step$value = _step.value,\n          rule = _step$value.rule,\n          className = _step$value.className,\n          text = _step$value.text,\n          shouldAppend = _step$value.shouldAppend;\n\n      var _iterator2 = _createForOfIteratorHelper(this.querySelectorAll(rule)),\n          _step2;\n\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var el = _step2.value;\n\n          if (!el.hasAttribute('id')) {\n            continue;\n          }\n\n          var id = el.getAttribute('id');\n          var anchor = document.createElement('a');\n          anchor.setAttribute('href', \"#\".concat(id));\n          anchor.setAttribute('class', className);\n          anchor.innerText = String(text || DEFAULTS.text);\n\n          if (shouldAppend) {\n            el.appendChild(anchor);\n          } else {\n            (0, _prepend.default)(el, anchor);\n          }\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n});"},"sourceMaps":null,"error":null,"hash":"4ab05d4467cc2db9756a95cd95b3da2d","cacheData":{"env":{}}}